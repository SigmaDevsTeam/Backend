spring:

  servlet:
    multipart:
      enabled: true
      max-file-size: 500MB
      max-request-size: 500MB

  web:
    resources:
      static-locations: classpath:/static/ , classpath:/static/avatars/

  #security

  security:
    front-end-url: https://taupe-raindrop-f35bc9.netlify.app
    front-end-redirect-url-sign-in: https://taupe-raindrop-f35bc9.netlify.app/auth
    front-end-redirect-url-logout: https://taupe-raindrop-f35bc9.netlify.app/home

    jwt:
      secret: 8f858c0f6db6068397b4d80725ea4d0b94170b0f982a566269a8ab94e7f52775a302025f69e05453953542720aa3bfa66f921776e68625c50c7d7a0f61ab4d87b0b49b16fb145347b92530d371bd1dd58a62a2d0f83722f267a81ebc5f054587b8d0eb080187583a250f1ff16952a9b6b3f20d410bd5150ae35b8ebf754fd7fc5a771c942c2ad57340473858712cf9dd5ab1dc410b220d9eaf0e5482b1975c4dae9dedd344aa471c7da570bd9d177bbea80165a298f616f43329ac443495cbab3a76b388508db5c57c9018e823497e153e7bfcd901b5d8925ea7f963b0bdf884f5ce0cd4fce47dc09c774de685eb5947b30ac9a44aa39f73dce06d33b450eeb09329096cb8ea0cf66fd0b7587430a60e0fcebfa10912039aaddcf4f246ac984bf52e9b3a29bb91a669e147eee0d053824612da3b4f28855881a1d7deca0ec5d3cb74129fe0afa6107cda465fc56408310c875fab3892fbaa1054cd4b55ce452f73e42a1443fb80ae96ba3f1a4ea15224de796147164cab6487d249d23fc4e5a88f75a97f6265b8bdcc8226ee55095e27b623cee7ee25826f864c65e3e12c2c7ea0855e531fc865bbbde304da86dc9aaf3880666c6675ec19b60214a78ad569acb4d5aec56be43c7343554a0aae4a63f26f52c62cc394318cc6fe81d1117f58166e354ff7ae1337aa0f4e56cdee98cbc539fbb522d1fe37af5edf27ffb1da95fe

    oauth2:
      client:
        registration:


          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
              - openid

          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - user
              - user:email
  #db


  jpa:
    generate-ddl: true

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres

aws:
  access_key: ${AWS_ACCESS}
  secret_access_key: ${AWS_SECRET}

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

server:
  #  ssl:
  #    key-store: classpath:keystore/test.p12
  #    key-store-password: javalover
  #    key-store-type: pkcs12
  #    key-alias: test
  #    key-password: javalover
  port: 80

logging:
  level:

    org.springframework.security: debug
#    com.sigmadevs.testtask: debug
#    org.springframework.web: debug
